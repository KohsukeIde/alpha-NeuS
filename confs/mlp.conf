general {
    base_exp_dir = ./exp/CASE_NAME
    recording = [
        ./models
    ]
}

dataset {
    data_dir = ./data/CASE_NAME/
    render_cameras_name = cameras_sphere.npz
    object_cameras_name = cameras_sphere.npz

    # Camera settings for real data
    use_roi = False
    scale_radius = 1.0
    use_colmap_extrinsic = False
    use_colmap_intrinsic = False
    
    # Sampling settings
    ground_z = -0.4
}

train {
    learning_rate = 5e-4
    learning_rate_alpha = 0.05
    end_iter = 300000

    batch_size = 512
    validate_resolution_level = 4
    warm_up_end = 5000
    anneal_end = 50000
    use_white_bkgd = False

    save_freq = 5000
    val_freq = 5000
    val_mesh_freq = 10000
    report_freq = 100

    igr_weight = 0.1
    mask_weight = 0.1
    iso_weight = 0.01
    
    # Background settings
    bkgd_mode = "fixed"    # Options: "fixed", "nerf", "mlp", "mlps", "tensor"
    use_init_bkgd = false
    
    # Used when bkgd_mode is mlp or tensor
    learning_rate_bg = 1e-4  
}

model {
    nerf {
        D = 8,
        d_in = 4,
        d_in_view = 3,
        W = 256,
        multires = 10,
        multires_view = 4,
        output_ch = 4,
        skips = [4],
        use_viewdirs = true
    }

    sdf_network {
        d_out = 257
        d_in = 3
        d_hidden = 256
        n_layers = 8
        skip_in = [4]
        multires = 6
        bias = 0.5
        scale = 1.0
        geometric_init = true
        weight_norm = true
    }

    variance_network {
        init_val = 0.3
    }

    rendering_network {
        d_feature = 256
        mode = idr
        d_in = 9
        d_out = 3
        d_hidden = 256
        n_layers = 4
        weight_norm = true
        multires_view = 4
        squeeze_out = true
    }

    neus_renderer {
        n_samples = 64
        n_importance = 64
        n_outside = 32
        up_sample_steps = 4
        perturb = 1.0
        
        # New parameters
        trans_threshold = 0.01
        use_hf_sampling = false
    }
    
    # Background network settings
    background_network {
        d_in = 2   # x, y座標のみ（mlpsモードではカメラごとに専用のMLPを使用するため）
        d_out = 3  # RGB + Alpha
        d_hidden = 256
        n_layers = 4
        multires = 4
        skips = []   # skip_inをskipsに修正
        use_batchnorm = false  # weight_normをuse_batchnormに変更
    }

}